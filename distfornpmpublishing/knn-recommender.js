!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["knn-recommender"]=e():t["knn-recommender"]=e()}(this,(function(){return(()=>{"use strict";var t={d:(e,r)=>{for(var i in r)t.o(r,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:r[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{default:()=>r});class r{constructor(t){this.rowToRowSimilarityMap={},this.rowIdToRowNumberMap={},this.columnIdToColumnNumberMap={},this.initialized=!1,t?(this.checkMatrix(t),this.matrix=t):(console.warn("Warning: Initializing knn-recommender with an empty user item matrix"),this.matrix=new Array(new Array),this.matrix[0].push("emptycorner"))}checkMatrix(t){if(!t||!t[0]||t[0].constructor!==Array||"string"!=typeof t[0][1])throw new TypeError("Malformatted matrix. It should be a non zero two dimensional array in the format [['emptycorner', 'item 1', 'item 2', 'item 3'], ['user 1', 1, -1, 0], ['user 2', 0, -1, 1]]")}initializeRecommender(){return new Promise(((t,e)=>{this.rowIdToRowNumberMap={},this.columnIdToColumnNumberMap={},this.calculateDistancesInZeroOneMatrixAndCreateRowIdToRowNumberAndColumnIdToColumnNumberMapsInChunks().then((e=>{this.initialized=!0,t(e)})).catch((t=>{e(t)}))}))}initializeRecommenderForUserId(t){this.initializeRecommenderForRowId(t)}initializeRecommenderForItemId(t){this.initializeRecommenderForRowId(t)}initializeRecommenderForRowId(t){this.rowIdToRowNumberMap[t]=0;for(let e=0;e<this.matrix.length;e++)if(this.matrix[e][0]===t)return this.calculateDistancesInZeroOneMatrixAndCreateRowIdToRowNumberAndColumnIdToColumnNumberMaps(e,e+1),void(this.initialized=!0);throw Error(`Id ${t} not found as a row in the matrix!`)}getNNearestNeighboursForUserId(t,e=-1){return this.getNNearestNeighboursForRowId(t,e)}getNNearestNeighboursForItemId(t,e=-1){return this.getNNearestNeighboursForRowId(t,e)}getNNearestNeighboursForRowId(t,e=-1){this.checkInitiated();let r=this.rowToRowSimilarityMap[t];if(!r)throw Error(`Similarities not initialized for rowId: ${t}`);return-1!==e&&r.length>e?r.slice(0,e):r}generateNNewRecommendationsForUserId(t,e=1,r=3){return this.checkInitiated(),this.generateNNewRecommendationsForUserIdInternal(t,!1,e,r)}generateNNewUniqueRecommendationsForUserId(t,e=1,r=3){return this.checkInitiated(),this.generateNNewRecommendationsForUserIdInternal(t,!0,e,r)}addLikeForUserToAnItem(t,e){this.updateMatrixForRowIdAndColumnId(t,e,1)}addDislikeForUserToAnItem(t,e){this.updateMatrixForRowIdAndColumnId(t,e,-1)}addCharacteristicForItem(t,e){this.updateMatrixForRowIdAndColumnId(t,e,1)}removeCharacteristicForItem(t,e){this.updateMatrixForRowIdAndColumnId(t,e,0)}updateMatrixForRowIdAndColumnId(t,e,r){if(!this.rowIdToRowNumberMap[t]||!this.columnIdToColumnNumberMap[e])throw new Error("userId or itemId not valid when updating user's value. Have you initialized the recommender after adding new items or users?");this.matrix[this.rowIdToRowNumberMap[t]][this.columnIdToColumnNumberMap[e]]=r}addNewUserToDataset(t){if(!t||t.length!=this.matrix[0].length)throw new Error("The row to be added doesn't have the same amount of columns as the other items in the matrix");if("string"!=typeof t[0])throw new Error("The row to be added isn't in the correct format that should be ['user id', 0, 1, ...]");if(this.rowIdToRowNumberMap[t[0]])throw new Error(`A row for the given id: ${t[0]} already exists in the user item matrix. Can't add a second row for the same user id. `);this.rowIdToRowNumberMap[t[0]]=this.matrix.push(t)-1}addNewEmptyUserToDataset(t){this.addNewEmptyRowToDataset(t)}addNewEmptyItemAsRowToDataset(t){this.addNewEmptyRowToDataset(t)}addNewEmptyRowToDataset(t){let e=new Array(this.matrix[0].length);e[0]=t;for(let t=1;t<this.matrix[0].length;t++)e[t]=0;this.addNewUserToDataset(e)}addNewItemToDataset(t){this.addNewColumnToDataset(t)}addNewItemCharacteristicToDataset(t){this.addNewColumnToDataset(t)}addNewColumnToDataset(t){this.columnIdToColumnNumberMap[t]=this.matrix[0].push(t)-1;for(let t=1;t<this.matrix.length;t++)this.matrix[t].push(0)}getAllRecommendationsForUserId(t){const e=this.rowIdToRowNumberMap[t];if(!e)throw new Error(`Invalid or non initialized user id ${t}`);return this.matrix[e]}generateNNewRecommendationsForUserIdInternal(t,e,r=1,i=3){const o=this.getAllRecommendationsForUserId(t),a=this.getNNearestNeighboursForUserId(t,i);let n=new Array(r),s=0,m={};for(let t=0;t<a.length;t++){const i=this.getAllRecommendationsForUserId(a[t].otherRowId);for(let d=1;d<o.length;d++)if(!(e&&m[d]||1!==i[d]||0!==o[d])){if(n[s]={itemId:this.matrix[0][d],recommenderUserId:a[t].otherRowId,similarityWithRecommender:a[t].similarity},s++,s>=r)return n;m[d]=!0}}return n}checkInitiated(){if(!this.initialized)throw new Error("Recommender not initialized!")}calculateDistancesInZeroOneMatrixAndCreateRowIdToRowNumberAndColumnIdToColumnNumberMapsInChunks(){return new Promise(((t,e)=>{this.chunkIntermediator(1,this.matrix.length,t,e)}))}chunkIntermediator(t,e,r,i){const o=t+3>e?e:t+3;try{this.calculateDistancesInZeroOneMatrixAndCreateRowIdToRowNumberAndColumnIdToColumnNumberMaps(t,o)}catch(t){return void i(t)}o<e?setTimeout((()=>this.chunkIntermediator(t+3,e,r,i)),0):(this.initialized=!0,r(!0))}calculateDistancesInZeroOneMatrixAndCreateRowIdToRowNumberAndColumnIdToColumnNumberMaps(t,e){const r=this.matrix.length,i=this.matrix[0].length;let o=!1;for(let a=t;a<e;a++){let t=Array(r-2),e=0;for(let n=1;n<r;n++){if(a===n)continue;let r=0,s=0;for(let t=1;t<i;t++){if(o||(this.columnIdToColumnNumberMap[this.matrix[0][t]]=t),-1!==this.matrix[a][t]&&0!==this.matrix[a][t]&&1!==this.matrix[a][t])throw new RangeError(`Element in matrix was invalid, either not a number at all or not a -1, 0, or 1. The invalid value  at index [${a}][${t}] is: ${this.matrix[a][t]}`);0!==this.matrix[a][t]&&this.matrix[a][t]===this.matrix[n][t]?(r++,s++):0===this.matrix[a][t]&&0===this.matrix[n][t]||s++}o=!0;let m=0!==s?r/s:0;if("string"!=typeof this.matrix[n][0])throw new TypeError(`Malformatted matrix. Element atat index [${n}][0] is not a string (describing a user/item id). The invalid element is: ${this.matrix[n][0]}`);t[e]={otherRowId:this.matrix[n][0],similarity:m},e++}if("string"!=typeof this.matrix[a][0])throw new TypeError(`Malformatted matrix. Element atat index [${a}][0] is not a string (describing a user/item id). The invalid element is: ${this.matrix[a][0]}`);if(this.rowIdToRowNumberMap[this.matrix[a][0]])throw new Error(`Malformatted matrix. The matrix contains two rows with the same id: ${this.matrix[a][0]}`);this.rowIdToRowNumberMap[this.matrix[a][0]]=a,this.rowToRowSimilarityMap[this.matrix[a][0]]=this.sortRowToOtherRowsSimilarityListByRowToRowSimilarityDescending(t)}}sortRowToOtherRowsSimilarityListByRowToRowSimilarityDescending(t){return t.sort(((t,e)=>t.similarity>e.similarity?-1:1))}}return e})()}));